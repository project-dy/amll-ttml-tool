{"version":3,"mappings":"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","names":["useCurrentSyncWord","defineStore","ref","storeToRefs","useAudio","currentWord","settings","useSettings","props","__props","watch","nextTick","itemRef","isRemainTime","d","sec","min","secText","secFixed","audio","displayWord","reactive","lastWordIndex","hasError","computed","kuroshiro","__vitePreload","onMounted","duration","setCurrentTime","syncEditor","lyric","useEditingLyric","lineMinHeight","getMinHeight","evt","mut","isBlankWord","lineIndex","wordIndex","isWordExist","getCurrentLine","moveRight","getCurrentWord","moveLeft","moveUp","moveDown","useKeyBinding","curWord","time","currentLine","curWordIndex","shouldRecord","nextWord","stepWordAndSetTime","currentTimeMS"],"ignoreList":[],"sources":["../../src/store/current-sync-word.ts","../../src/components/LyricSyncLine.vue","../../src/components/LyricSyncWord.vue","../../src/components/LyricSyncEditor.vue"],"sourcesContent":["/*\n * Copyright 2023-2024 Steve Xiao (stevexmh@qq.com) and contributors.\n *\n * 本源代码文件是属于 AMLL TTML Tool 项目的一部分。\n * This source code file is a part of AMLL TTML Tool project.\n * 本项目的源代码的使用受到 GNU GENERAL PUBLIC LICENSE version 3 许可证的约束，具体可以参阅以下链接。\n * Use of this source code is governed by the GNU GPLv3 license that can be found through the following link.\n *\n * https://github.com/Steve-xmh/amll-ttml-tool/blob/main/LICENSE\n */\n\nimport { defineStore } from \"pinia\";\n\nexport const useCurrentSyncWord = defineStore(\"current-sync-word\", {\n\tstate: () => ({\n\t\tlineIndex: -1,\n\t\twordIndex: -1,\n\t\temptyBeat: 0,\n\t}),\n});\n","<!--\n  - Copyright 2023-2024 Steve Xiao (stevexmh@qq.com) and contributors.\n  -\n  - 本源代码文件是属于 AMLL TTML Tool 项目的一部分。\n  - This source code file is a part of AMLL TTML Tool project.\n  - 本项目的源代码的使用受到 GNU GENERAL PUBLIC LICENSE version 3 许可证的约束，具体可以参阅以下链接。\n  - Use of this source code is governed by the GNU GPLv3 license that can be found through the following link.\n  -\n  - https://github.com/Steve-xmh/amll-ttml-tool/blob/main/LICENSE\n  -->\n\n<template>\n\t<div ref=\"itemRef\" :class=\"{\n\t\t'lyric-line-item': true,\n\t\t'lyric-line-item-selected': currentWord.lineIndex === props.line.id,\n\t}\" @click=\"\n\t\tcurrentWord.lineIndex = props.line.id;\n\tcurrentWord.wordIndex = 0;\n\tcurrentWord.emptyBeat = 0;\n\t\">\n\t\t<div class=\"lyric-line-item-inner\">\n\t\t\t<div>{{ toTimestamp(line.startTime ?? 0) }}</div>\n\t\t\t<div v-if=\"line.words.length > 0\" class=\"word-time\">{{ toTimestamp(line.words[0].startTime ?? 0) }}</div>\n\t\t\t<div class=\"line\">\n\t\t\t\t<div :class=\"{\n\t\t\t\t\t'hot-line':\n\t\t\t\t\t\tline.words.length > 0 &&\n\t\t\t\t\t\tline.words[0].startTime <= currentTime &&\n\t\t\t\t\t\tline.words[line.words.length - 1].endTime > currentTime,\n\t\t\t\t}\">\n\t\t\t\t\t<span v-for=\"word in line.words\" :key=\"word.id\" :class=\"{\n\t\t\t\t\t\t'current-word':\n\t\t\t\t\t\t\tword.lineIndex === currentWord.lineIndex &&\n\t\t\t\t\t\t\tword.id === currentWord.wordIndex,\n\t\t\t\t\t\t'hot-word':\n\t\t\t\t\t\t\tword.startTime <= currentTime && word.endTime > currentTime,\n\t\t\t\t\t\t'lyric-line-word-warn': word.endTime - word.startTime < 0,\n\t\t\t\t\t}\">{{ word.word }}</span>\n\t\t\t\t</div>\n\t\t\t\t<div v-if=\"settings.showTranslateLine\">{{ line.translatedLyric }}</div>\n\t\t\t\t<div v-if=\"settings.showRomanLine\">{{ line.romanLyric }}</div>\n\t\t\t</div>\n\t\t\t<div v-if=\"line.words.length > 0\" class=\"word-time\">{{\n\t\t\t\ttoTimestamp(line.words[line.words.length - 1].endTime ?? 0)\n\t\t\t}}\n\t\t\t</div>\n\t\t\t<div>{{ toTimestamp(line.endTime ?? 0) }}</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\nimport { nextTick, ref, watch } from \"vue\";\nimport { useAudio, useCurrentSyncWord, useSettings } from \"../store\";\nimport type { LyricLineWithId } from \"../store/lyric\";\n\nconst itemRef = ref<HTMLDivElement>();\n\nconst { currentTime } = storeToRefs(useAudio());\nconst currentWord = useCurrentSyncWord();\nconst settings = useSettings();\n\nconst props = defineProps<{\n\tline: LyricLineWithId;\n}>();\n\nwatch(\n\t() => [currentWord.lineIndex, props.line.id],\n\t() => {\n\t\tif (currentWord.lineIndex === props.line.id) {\n\t\t\tnextTick(() => {\n\t\t\t\titemRef.value?.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"center\",\n\t\t\t\t\tinline: \"center\",\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\t{ flush: \"post\" },\n);\n\nfunction toTimestamp(duration: number) {\n\tconst isRemainTime = duration < 0;\n\n\tconst d = Math.abs(duration / 1000);\n\tconst sec = d % 60;\n\tconst min = Math.floor((d - sec) / 60);\n\tconst secFixed = sec.toFixed(3);\n\tconst secText = \"0\".repeat(6 - secFixed.length) + secFixed;\n\n\treturn `${isRemainTime ? \"-\" : \"\"}${min}:${secText}`;\n}\n</script>\n\n<style lang=\"css\" scoped>\n.sync-line>* {\n\tmargin-right: 6px;\n}\n\n.lyric-line-word-warn {\n\tcolor: #EE4444;\n}\n\n.lyric-line-item {\n\tcursor: pointer;\n\toutline-offset: -4px;\n\tpadding: 4px;\n\tborder-bottom: 1px solid rgba(170, 170, 170, 0.2666666667);\n\n\t&.lyric-line-item-selected {\n\t\toutline: 3px solid var(--att-theme-color);\n\t}\n\n\t&:hover {\n\t\tbackground: var(--att-color-hover);\n\t\tcolor: var(--att-text-color-hover);\n\t}\n}\n\n.hot-line {\n\tcolor: var(--att-theme-color-hover);\n\topacity: 0.7;\n}\n\n.hot-word {\n\tcolor: var(--att-theme-color-pressed);\n}\n\n.current-word {\n\tcolor: var(--att-theme-color);\n\tfont-weight: bold;\n}\n\n.lyric-line-item-inner {\n\tdisplay: flex;\n\talign-items: center;\n\tmargin: 0 12px;\n\tgap: 12px;\n\n\t.word-time {\n\t\topacity: 0.75;\n\t}\n\n\t.line {\n\t\tfont-size: 18px;\n\t\tflex: 1;\n\t}\n}\n</style>\n","<!--\n  - Copyright 2023-2024 Steve Xiao (stevexmh@qq.com) and contributors.\n  -\n  - 本源代码文件是属于 AMLL TTML Tool 项目的一部分。\n  - This source code file is a part of AMLL TTML Tool project.\n  - 本项目的源代码的使用受到 GNU GENERAL PUBLIC LICENSE version 3 许可证的约束，具体可以参阅以下链接。\n  - Use of this source code is governed by the GNU GPLv3 license that can be found through the following link.\n  -\n  - https://github.com/Steve-xmh/amll-ttml-tool/blob/main/LICENSE\n  -->\n\n<template>\n\t<div v-show=\"props.word.word.trim().length > 0\" ref=\"elRef\" :class=\"{\n\t\t'lyric-sync-word': true,\n\t\t'lyric-word-not-main': props.notMain,\n\t\t'lyric-word-warn': hasError,\n\t}\" @click=\"currentWord.wordIndex = props.word.id; currentWord.emptyBeat = 0;\">\n\t\t<div v-if=\"displayWord.htmlWord\" v-html=\"displayWord.htmlWord\"></div>\n\t\t<div v-else>{{ displayWord.word }}</div>\n\t\t<div>{{ toTimestamp(props.word.startTime ?? 0) }}</div>\n\t\t<div>{{ toTimestamp(props.word.endTime ?? 0) }}</div>\n\t\t<div v-if=\"props.word.id === currentWord.wordIndex && !props.notMain\">{{ toTimestamp(currentTimeMS) }}</div>\n\t\t<div v-if=\"props.word.id === currentWord.wordIndex && !props.notMain\" />\n\t\t<div v-if=\"props.word.id === currentWord.wordIndex && !props.notMain && (props.word.emptyBeat ?? 0) > 0\">\n\t\t\t{{ currentWord.emptyBeat }} / {{ props.word.emptyBeat }}\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\nimport { computed, nextTick, onMounted, reactive, ref, watch } from \"vue\";\nimport { useAudio, useCurrentSyncWord, useSettings } from \"../store\";\nimport type { LyricWordWithId } from \"../store/lyric\";\n\nconst currentWord = useCurrentSyncWord();\nconst audio = useAudio();\nconst settings = useSettings();\nconst { currentTimeMS } = storeToRefs(audio);\n\nconst props = defineProps<{\n\tword: LyricWordWithId;\n\tnotMain?: boolean;\n}>();\n\nconst displayWord = reactive({\n\tword: props.word.word,\n\thtmlWord: \"\",\n});\n\nconst elRef = ref<HTMLDivElement>();\nconst lastWordIndex = ref(currentWord.wordIndex);\nwatch(\n\t() => [currentWord.wordIndex, props.word.id, props.word.lineIndex],\n\t() => {\n\t\tif (!props.notMain && currentWord.wordIndex === props.word.id) {\n\t\t\tnextTick(() => {\n\t\t\t\telRef.value?.scrollIntoView({\n\t\t\t\t\tbehavior:\n\t\t\t\t\t\tMath.abs(currentWord.wordIndex - lastWordIndex.value) <= 1\n\t\t\t\t\t\t\t? \"smooth\"\n\t\t\t\t\t\t\t: \"instant\",\n\t\t\t\t\tblock: \"center\",\n\t\t\t\t\tinline: \"center\",\n\t\t\t\t});\n\t\t\t});\n\t\t\tlastWordIndex.value = currentWord.wordIndex;\n\t\t}\n\t},\n\t{ flush: \"post\" },\n);\n\nconst hasError = computed(() => {\n\treturn props.word.endTime - props.word.startTime < 0;\n});\n\nwatch(\n\t() => [props.word, settings.showJpnRomaji],\n\tasync () => {\n\t\tdisplayWord.word = props.word.word;\n\t\tdisplayWord.htmlWord = \"\";\n\t\tif (settings.showJpnRomaji) {\n\t\t\tconst { kuroshiro } = await import(\n\t\t\t\t\"../utils/kuroshiro-analyzer-kuromoji-fix-dict\"\n\t\t\t);\n\t\t\tdisplayWord.htmlWord = await kuroshiro.convert(displayWord.word, {\n\t\t\t\tto: \"romaji\",\n\t\t\t\tmode: \"furigana\",\n\t\t\t});\n\t\t}\n\t},\n\t{ flush: \"post\" },\n);\n\nonMounted(async () => {\n\tif (settings.showJpnRomaji) {\n\t\tconst { kuroshiro } = await import(\n\t\t\t\"../utils/kuroshiro-analyzer-kuromoji-fix-dict\"\n\t\t);\n\t\tdisplayWord.htmlWord = await kuroshiro.convert(displayWord.word, {\n\t\t\tto: \"romaji\",\n\t\t\tmode: \"furigana\",\n\t\t});\n\t}\n});\n\nfunction toTimestamp(duration: number) {\n\tconst isRemainTime = duration < 0;\n\n\tconst d = Math.abs(duration / 1000);\n\tconst sec = d % 60;\n\tconst min = Math.floor((d - sec) / 60);\n\tconst secFixed = sec.toFixed(3);\n\tconst secText = \"0\".repeat(6 - secFixed.length) + secFixed;\n\n\treturn `${isRemainTime ? \"-\" : \"\"}${min}:${secText}`;\n}\n</script>\n\n<style lang=\"css\" scoped>\n.lyric-sync-word {\n\tdisplay: grid;\n\tgrid-template: \"emptyBeat emptyBeat\" \"selectMark selectMark\" \"selectArrow selectArrow\" \"word word\" \"startTime endTime\";\n\talign-content: center;\n\tborder-left: 1px solid #AAA4;\n\tpadding: 0 12px;\n\tuser-select: none;\n\tcursor: pointer;\n\n\t&:first-child {\n\t\tborder-left: none;\n\t}\n\n\t&>*:nth-child(1) {\n\t\tgrid-area: word;\n\t\tfont-size: 32px;\n\t\ttext-align: center;\n\t}\n\n\t&>*:nth-child(2) {\n\t\tgrid-area: startTime;\n\t\tfont-size: 12px;\n\t\ttext-align: left;\n\t}\n\n\t&>*:nth-child(3) {\n\t\tgrid-area: endTime;\n\t\tmargin-left: 8px;\n\t\tfont-size: 12px;\n\t\ttext-align: right;\n\t}\n\n\t&>*:nth-child(4) {\n\t\tgrid-area: selectMark;\n\t\tfont-size: 12px;\n\t\ttext-align: center;\n\t\tcolor: var(--att-theme-color);\n\t\tfont-weight: bold;\n\t}\n\n\t&>*:nth-child(5) {\n\t\tgrid-area: selectArrow;\n\t\talign-self: center;\n\t\tjustify-self: center;\n\t\tcontent: \"\";\n\t\twidth: 0;\n\t\theight: 0;\n\t\tmargin-bottom: 8px;\n\t\tborder-left: 4px solid transparent;\n\t\tborder-right: 4px solid transparent;\n\t\tborder-top: 4px solid var(--att-theme-color);\n\t}\n\n\t&>*:nth-child(6) {\n\t\tgrid-area: emptyBeat;\n\t\tfont-size: 12px;\n\t\ttext-align: center;\n\t\tcolor: var(--att-theme-color);\n\t\tfont-weight: bold;\n\t}\n}\n\n.lyric-word-warn {\n\tcolor: #EE4444;\n}\n\n.lyric-word-not-main {\n\topacity: 0.5;\n}\n</style>\n","<!--\n  - Copyright 2023-2024 Steve Xiao (stevexmh@qq.com) and contributors.\n  -\n  - 本源代码文件是属于 AMLL TTML Tool 项目的一部分。\n  - This source code file is a part of AMLL TTML Tool project.\n  - 本项目的源代码的使用受到 GNU GENERAL PUBLIC LICENSE version 3 许可证的约束，具体可以参阅以下链接。\n  - Use of this source code is governed by the GNU GPLv3 license that can be found through the following link.\n  -\n  - https://github.com/Steve-xmh/amll-ttml-tool/blob/main/LICENSE\n  -->\n\n<template>\n\t<div class=\"lyric-sync-editor\">\n\t\t<div v-if=\"lyric.lyrics[currentWord.lineIndex]\" ref=\"syncEditor\" class=\"lyric-line-sync-editor\"\n\t\t\t@wheel=\"onSyncEditorScroll\">\n\t\t\t<template v-if=\"lyric.lineWithIds[currentWord.lineIndex - 1]\">\n\t\t\t\t<LyricSyncWord v-for=\"(word, i) in lyric.lineWithIds[currentWord.lineIndex - 1].words\" :key=\"i\"\n\t\t\t\t\t:word=\"word\" not-main />\n\t\t\t</template>\n\t\t\t<LyricSyncWord v-for=\"(word, i) in lyric.lineWithIds[currentWord.lineIndex].words\" :key=\"i\" :word=\"word\" />\n\t\t\t<template v-if=\"lyric.lineWithIds[currentWord.lineIndex + 1]\">\n\t\t\t\t<LyricSyncWord v-for=\"(word, i) in lyric.lineWithIds[currentWord.lineIndex + 1].words\" :key=\"i\"\n\t\t\t\t\t:word=\"word\" not-main />\n\t\t\t</template>\n\t\t</div>\n\t\t<div v-else class=\"lyric-line-sync-editor-no-selected\">\n\t\t\t<div style=\"white-space: pre-line;\">\n\t\t\t\t<i18n-t keypath=\"lyricSyncEditor.unselectedTip\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"lyric-line-viewer\">\n\t\t\t<DynamicScroller v-slot=\"{ item, active }\" :items=\"lyric.lineWithIds\" :min-item-size=\"lineMinHeight\"\n\t\t\t\tkey-field=\"id\" style=\"width: 100%; position: relative; min-height: fit-content; height: 100%;\">\n\t\t\t\t<DynamicScrollerItem :active=\"active\" :item=\"item\" watch-data>\n\t\t\t\t\t<LyricSyncLine v-if=\"active\" :line=\"item\" />\n\t\t\t\t</DynamicScrollerItem>\n\t\t\t</DynamicScroller>\n\t\t</div>\n\t</div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { storeToRefs } from \"pinia\";\nimport { computed, nextTick, ref } from \"vue\";\nimport { DynamicScroller, DynamicScrollerItem } from \"vue-virtual-scroller\";\nimport {\n\tuseAudio,\n\tuseCurrentSyncWord, useEditingLyric,\n\tuseSettings\n} from \"../store\";\nimport { type KeyBindingEvent, useKeyBinding } from \"../utils/keybindings\";\nimport type { LyricLine, LyricWord } from \"../utils/ttml-types\";\nimport LyricSyncLine from \"./LyricSyncLine.vue\";\nimport LyricSyncWord from \"./LyricSyncWord.vue\";\n\nconst currentWord = useCurrentSyncWord();\nconst audio = useAudio();\nconst settings = useSettings();\nconst { setCurrentTime } = audio;\nconst { currentTimeMS } = storeToRefs(audio);\nconst syncEditor = ref<HTMLDivElement>();\nconst lyric = useEditingLyric();\nconst lineMinHeight = computed(getMinHeight);\n\nfunction getMinHeight() {\n\tif (settings.showTranslateLine && settings.showRomanLine) {\n\t\treturn 95;\n\t} else if (settings.showTranslateLine || settings.showRomanLine) {\n\t\treturn 66;\n\t} else {\n\t\treturn 37;\n\t}\n}\n\nfunction onSyncEditorScroll(evt: WheelEvent) {\n\t// 默认横向滚动\n\tsyncEditor.value?.scrollBy({\n\t\tleft: evt.deltaX + evt.deltaY,\n\t\tbehavior: \"auto\",\n\t});\n}\n\ncurrentWord.$subscribe(\n\t(mut) => {\n\t\tconst evt = mut.events instanceof Array ? mut.events[0] : mut.events;\n\t\tif (evt.key === \"wordIndex\" && syncEditor.value) {\n\t\t\tconst el = syncEditor.value.children.item(currentWord.wordIndex);\n\t\t\tnextTick(() => {\n\t\t\t\tel?.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"center\",\n\t\t\t\t\tinline: \"center\",\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\t{ flush: \"post\" },\n);\n\n\nfunction isBlankWord(\n\tlineIndex = currentWord.lineIndex,\n\twordIndex = currentWord.wordIndex,\n) {\n\treturn (\n\t\t(lyric.lineWithIds[lineIndex]?.words?.[wordIndex]?.word?.trim()?.length ??\n\t\t\t0) === 0\n\t);\n}\n\nfunction isWordExist(\n\tlineIndex = currentWord.lineIndex,\n\twordIndex = currentWord.wordIndex,\n) {\n\treturn !!lyric.lyrics[lineIndex]?.words?.[wordIndex];\n}\n\nfunction getCurrentWord(): LyricWord | undefined {\n\treturn lyric.lyrics[currentWord.lineIndex]?.words?.[currentWord.wordIndex];\n}\n\nfunction getCurrentLine(): LyricLine | undefined {\n\treturn lyric.lyrics[currentWord.lineIndex];\n}\n\nfunction moveRight() {\n\tlet lineIndex = currentWord.lineIndex;\n\tlet wordIndex = currentWord.wordIndex;\n\tif ((getCurrentWord()?.emptyBeat ?? 0) > currentWord.emptyBeat) {\n\t\tcurrentWord.emptyBeat++;\n\t\treturn false;\n\t}\n\tdo {\n\t\tif (wordIndex < lyric.lineWithIds[lineIndex].words.length - 1) {\n\t\t\twordIndex++;\n\t\t} else if (lineIndex < lyric.lineWithIds.length - 1) {\n\t\t\twordIndex = 0;\n\t\t\tlineIndex++;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t} while (\n\t\tisWordExist(lineIndex, wordIndex) &&\n\t\tisBlankWord(lineIndex, wordIndex)\n\t);\n\tif (isWordExist(lineIndex, wordIndex) && !isBlankWord(lineIndex, wordIndex)) {\n\t\tcurrentWord.wordIndex = wordIndex;\n\t\tcurrentWord.lineIndex = lineIndex;\n\t\tcurrentWord.emptyBeat = 0;\n\t}\n\treturn true;\n}\n\nfunction moveLeft() {\n\tlet lineIndex = currentWord.lineIndex;\n\tlet wordIndex = currentWord.wordIndex;\n\tif (currentWord.emptyBeat > 0) {\n\t\tcurrentWord.emptyBeat--;\n\t\treturn false;\n\t}\n\tdo {\n\t\tif (wordIndex > 0) {\n\t\t\twordIndex--;\n\t\t} else if (lineIndex > 0) {\n\t\t\twordIndex = lyric.lineWithIds[--lineIndex].words.length - 1;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t} while (\n\t\tisWordExist(lineIndex, wordIndex) &&\n\t\tisBlankWord(lineIndex, wordIndex)\n\t);\n\tif (isWordExist(lineIndex, wordIndex) && !isBlankWord(lineIndex, wordIndex)) {\n\t\tcurrentWord.wordIndex = wordIndex;\n\t\tcurrentWord.lineIndex = lineIndex;\n\t\tcurrentWord.emptyBeat = getCurrentWord()?.emptyBeat ?? 0;\n\t}\n\treturn true;\n}\n\nfunction moveUp() {\n\tlet lineIndex = currentWord.lineIndex;\n\tlet wordIndex = currentWord.wordIndex;\n\tdo {\n\t\tif (lineIndex > 0) {\n\t\t\tlineIndex--;\n\t\t\twordIndex = 0;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t} while (\n\t\tisWordExist(lineIndex, wordIndex) &&\n\t\tisBlankWord(lineIndex, wordIndex)\n\t);\n\tif (isWordExist(lineIndex, wordIndex) && !isBlankWord(lineIndex, wordIndex)) {\n\t\tcurrentWord.wordIndex = wordIndex;\n\t\tcurrentWord.lineIndex = lineIndex;\n\t\tcurrentWord.emptyBeat = 0;\n\t}\n}\n\nfunction moveDown() {\n\tlet lineIndex = currentWord.lineIndex;\n\tlet wordIndex = currentWord.wordIndex;\n\tdo {\n\t\tif (lineIndex < lyric.lineWithIds.length - 1) {\n\t\t\tlineIndex++;\n\t\t\twordIndex = 0;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t} while (\n\t\tisWordExist(lineIndex, wordIndex) &&\n\t\tisBlankWord(lineIndex, wordIndex)\n\t);\n\tif (isWordExist(lineIndex, wordIndex) && !isBlankWord(lineIndex, wordIndex)) {\n\t\tcurrentWord.wordIndex = wordIndex;\n\t\tcurrentWord.lineIndex = lineIndex;\n\t\tcurrentWord.emptyBeat = 0;\n\t}\n}\n\nuseKeyBinding(settings.keybindings.moveLeftWord, () => {\n\tmoveLeft();\n});\nuseKeyBinding(settings.keybindings.moveRightWord, () => {\n\tmoveRight();\n});\nuseKeyBinding(settings.keybindings.moveUpLine, () => {\n\tmoveUp();\n});\nuseKeyBinding(settings.keybindings.moveDownLine, () => {\n\tmoveDown();\n});\n\n// 移动到上一个单词，并设置播放位置为目标单词的起始时间\nuseKeyBinding(settings.keybindings.seekLeftWord, () => {\n\tif (moveLeft()) {\n\t\tconst curWord = getCurrentWord();\n\t\tif (curWord) setCurrentTime(curWord.startTime);\n\t}\n});\n// 移动到下一个单词，并设置播放位置为目标单词的起始时间\nuseKeyBinding(settings.keybindings.seekRightWord, () => {\n\tif (moveRight()) {\n\t\tconst curWord = getCurrentWord();\n\t\tif (curWord) setCurrentTime(curWord.startTime);\n\t}\n});\n// 记录当前时间为当前单词的起始时间\nuseKeyBinding(\n\tsettings.keybindings.setCurWordStartTime,\n\t(evt: KeyBindingEvent) => {\n\t\tconst curWord = getCurrentWord();\n\t\tif (curWord) {\n\t\t\tconst time =\n\t\t\t\tcurrentTimeMS.value +\n\t\t\t\tsettings.timeOffset -\n\t\t\t\tMath.round(evt.downTimeOffset);\n\t\t\tcurWord.startTime = time;\n\t\t\tif ((curWord.emptyBeat ?? 0) > 0) currentWord.emptyBeat = 1;\n\t\t\tconst currentLine = getCurrentLine();\n\t\t\tif (currentWord.wordIndex === 0 && currentLine) {\n\t\t\t\tcurrentLine.startTime = time;\n\t\t\t}\n\t\t\tlyric.record();\n\t\t}\n\t},\n);\n\nfunction stepWordAndSetTime(evt: KeyBindingEvent) {\n\tconst curWord = getCurrentWord();\n\tconst currentLine = getCurrentLine();\n\tconst curWordIndex = currentWord.wordIndex;\n\tif (moveRight()) {\n\t\tconst time =\n\t\t\tcurrentTimeMS.value +\n\t\t\tsettings.timeOffset -\n\t\t\tMath.round(evt.downTimeOffset);\n\t\tlet shouldRecord = false;\n\t\tif (curWord) {\n\t\t\tcurWord.endTime = time;\n\t\t\tshouldRecord = true;\n\t\t\tif (currentLine && curWordIndex === currentLine.words.length - 1) {\n\t\t\t\tcurrentLine.endTime = curWord.endTime;\n\t\t\t}\n\t\t}\n\t\tconst nextWord = getCurrentWord();\n\t\tif (nextWord) {\n\t\t\tnextWord.startTime = time;\n\t\t\tshouldRecord = true;\n\t\t\tconst currentLine = getCurrentLine();\n\t\t\tif (currentLine && currentWord.wordIndex === 0) {\n\t\t\t\tcurrentLine.startTime = nextWord.startTime;\n\t\t\t}\n\t\t}\n\t\tif (shouldRecord) {\n\t\t\tlyric.record();\n\t\t}\n\t}\n}\n\n// 记录当前时间为当前单词的结束时间和下一个单词的起始时间，并移动到下一个单词\nuseKeyBinding(settings.keybindings.stepWordAndSetTime, (evt) => {\n\tstepWordAndSetTime(evt);\n});\nuseKeyBinding(settings.keybindings.stepWordAndSetTimeAlias1, (evt) => {\n\tstepWordAndSetTime(evt);\n});\nuseKeyBinding(settings.keybindings.stepWordAndSetTimeAlias2, (evt) => {\n\tstepWordAndSetTime(evt);\n});\nuseKeyBinding(settings.keybindings.stepWordAndSetTimeAlias3, (evt) => {\n\tstepWordAndSetTime(evt);\n});\n// 记录当前时间为当前单词的结束时间，并移动到下一个单词（用于空出间奏时间）\nuseKeyBinding(settings.keybindings.stepWordAndSetEndTime, (evt) => {\n\tconst curWord = getCurrentWord();\n\tconst currentLine = getCurrentLine();\n\tconst curWordIndex = currentWord.wordIndex;\n\tif (moveRight()) {\n\t\tif (curWord) {\n\t\t\tcurWord.endTime =\n\t\t\t\tcurrentTimeMS.value +\n\t\t\t\tsettings.timeOffset -\n\t\t\t\tMath.round(evt.downTimeOffset);\n\t\t\tif (currentLine && curWordIndex === currentLine.words.length - 1) {\n\t\t\t\tcurrentLine.endTime = curWord.endTime;\n\t\t\t}\n\t\t\tlyric.record();\n\t\t}\n\t}\n});\nuseKeyBinding(settings.keybindings.setLineStartTime, (evt) => {\n\tconst currentLine = getCurrentLine();\n\tif (moveRight()) {\n\t\tif (currentLine) {\n\t\t\tcurrentLine.startTime =\n\t\t\t\tcurrentTimeMS.value +\n\t\t\t\tsettings.timeOffset -\n\t\t\t\tMath.round(evt.downTimeOffset);\n\t\t\tlyric.record();\n\t\t}\n\t}\n});\nuseKeyBinding(settings.keybindings.setLineEndTime, (evt) => {\n\tconst currentLine = getCurrentLine();\n\tif (moveRight()) {\n\t\tif (currentLine) {\n\t\t\tcurrentLine.endTime =\n\t\t\t\tcurrentTimeMS.value +\n\t\t\t\tsettings.timeOffset -\n\t\t\t\tMath.round(evt.downTimeOffset);\n\t\t\tlyric.record();\n\t\t}\n\t}\n});\n</script>\n\n<style lang=\"css\" scoped>\n.lyric-sync-editor {\n\tdisplay: flex;\n\tflex-direction: column;\n\theight: 100%;\n\tmax-height: 100%;\n\toverflow: hidden;\n}\n\n.lyric-line-sync-editor-no-selected {\n\tflex: 1;\n\talign-self: center;\n\tjustify-content: center;\n\talign-items: center;\n\toverflow: hidden;\n\tmax-width: 100%;\n\tmin-height: 128px;\n\tdisplay: flex;\n\ttext-align: center;\n}\n\n.lyric-line-sync-editor {\n\tflex: 1;\n\talign-self: stretch;\n\toverflow: auto hidden;\n\tmax-width: 100%;\n\tmin-height: 128px;\n\tdisplay: flex;\n\talign-items: stretch;\n\tjustify-content: center;\n\tpadding: 0 32px;\n\twhite-space: nowrap;\n\tborder-bottom: 1px solid #AAA4;\n}\n\n.word-selected {\n\tgrid-area: selectMark;\n}\n\n.lyric-line-viewer {\n\tflex: 5;\n\tposition: relative;\n\talign-self: stretch;\n\tmin-height: 0;\n\toverflow: hidden auto;\n}\n</style>\n"],"file":"assets/LyricSyncEditor-CVwpWnbO.js"}