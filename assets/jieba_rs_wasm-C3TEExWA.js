let r;const u=new Array(128).fill(void 0);u.push(void 0,null,!0,!1);function w(n){return u[n]}let f=u.length;function h(n){n<132||(u[n]=f,f=n)}function p(n){const o=w(n);return h(n),o}const x=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&x.decode();let c=null;function m(){return(c===null||c.byteLength===0)&&(c=new Uint8Array(r.memory.buffer)),c}let _=0;const y=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}};y.encodeInto;function T(n,o,l){{const e=y.encode(n),t=o(e.length,1)>>>0;return m().subarray(t,t+e.length).set(e),_=e.length,t}}let i=null;function s(){return(i===null||i.byteLength===0)&&(i=new Int32Array(r.memory.buffer)),i}let a=null;function E(){return(a===null||a.byteLength===0)&&(a=new Uint32Array(r.memory.buffer)),a}function v(n,o){n=n>>>0;const l=E().subarray(n/4,n/4+o),e=[];for(let t=0;t<l.length;t++)e.push(p(l[t]));return e}function A(n,o){try{const d=r.__wbindgen_add_to_stack_pointer(-16),b=T(n,r.__wbindgen_malloc,r.__wbindgen_realloc),g=_;r.cut(d,b,g,o);var l=s()[d/4+0],e=s()[d/4+1],t=v(l,e).slice();return r.__wbindgen_free(l,e*4,4),t}finally{r.__wbindgen_add_to_stack_pointer(16)}}export{A as cut};
